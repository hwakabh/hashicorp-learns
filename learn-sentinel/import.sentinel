# import testings

// Note that imports should be on the top of .sentinel files
// Static imports
import "allowed_list"

// Standard imports
import "http"
import "json"

// Using libraries imports
// https://developer.hashicorp.com/terraform/cloud-docs/policy-enforcement/import-reference
import "tfplan/v2" as myplan
import "tfconfig/v2" as myconfig
import "tfstate/v2" as mystate
# import "tfrun" as tfrun

// module imports
import "my_local_module" as lib


// accessing Static imported data
allowed_hosts = allowed_list.hosts
print(allowed_hosts)

for allowed_hosts as host {
  print("\tHostname: " + host.name + " , Role: " + host.role)
}

dev_servers = filter allowed_hosts as _, hosts {
  // you can also access: index of elements with `filter LIST as INDEX, ELEMENT {...}`
  hosts.role == "dev"
}
print(dev_servers)

// accessing Standard imported data
// https://developer.hashicorp.com/sentinel/docs/imports/http
// https://developer.hashicorp.com/sentinel/docs/imports/json
resp = http.get("https://httpbin.org/get")
r = json.unmarshal(resp.body)
print(r.origin)

# // accessing data from libs
# print(tfplan.terraform_version)

// rule definitions and variables
resp = http.get("https://httpbin.org/get")
r = json.unmarshal(resp.body)


print(myplan.terraform_version)
print(myconfig.providers)
print(mystate.resources)

// accessing module imported data
print(lib.get_sentinel_version())


rule_1 = rule {
  r.headers.Host == allowed_hosts[2].name
}

rule_2 = rule {
  lib.get_sentinel_version() == "0.30.0"
}

main = rule {
  rule_1 == true and rule_2 == true
}

