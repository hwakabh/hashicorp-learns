# https://developer.hashicorp.com/vault/tutorials/kubernetes/kubernetes-raft-deployment-guide?in=vault%2Fkubernetes#configure-vault-helm-chart
# default values of hashicorp/vault-helm:
# https://raw.githubusercontent.com/hashicorp/vault-helm/refs/heads/main/values.yaml

global:
  namespace: "vault"

server:
  # https://developer.hashicorp.com/vault/docs/platform/k8s/helm/enterprise
  enterpriseLicense:
    secretName: "vault-ent-license"
  image:
    repository: "hashicorp/vault-enterprise"
    tag: "1.17.7-ent"
  logLevel: "debug"
  ingress:
    enabled: false
    # enabled: true
    # # https://cloud.google.com/kubernetes-engine/docs/concepts/ingress#deprecated_annotation
    # #ingressClassName: ""
    # annotations:
    #   kubernetes.io/ingress.class: gce
    #   # kubernetes.io/tls-acme: "true"
    # hosts:
    #   - host: vault.hc-8b1ddb1733494af2af02d477176.gcp.sbx.hashicorpdemo.com

  extraArgs: "-config=/vault/userconfig/vault-kms-credentials/vault-unseal.key.json"
  # extraEnvironmentVars is a list of extra environment variables to set with the stateful set. These could be
  # used to include variables required for auto-unseal.
  extraEnvironmentVars:
    VAULT_SKIP_VERIFY: true
  # extraSecretEnvironmentVars is a list of extra environment variables to set with the stateful set.
  # These variables take value from existing Secret objects.
  extraSecretEnvironmentVars: []
    # - envName: AWS_SECRET_ACCESS_KEY
    #   secretName: vault
    #   secretKey: AWS_SECRET_ACCESS_KEY

  volumes:
    - name: vault-kms-credentials
      secret:
        secretName: vault-kms-credentials
        defaultMode: 420
  volumeMounts:
    - mountPath: /vault/userconfig/vault-kms-credentials
      name: vault-kms-credentials
      readOnly: true

  standalone:
    enabled: false

  ha:
    # default ha.replicas = 3
    enabled: true
    raft:
      enabled: true
      setNodeId: true
      // multi-seal setup + Cloud Keys
      // https://developer.hashicorp.com/vault/docs/configuration/seal/seal-ha
      // https://developer.hashicorp.com/vault/docs/configuration/seal/gcpckms
      config: |-
        ui = true
        cluster_name = "vault-cluster"
        listener "tcp" {
          tls_disable = true
          address = "[::]:8200"
          cluster_address = "[::]:8201"
        }
        seal "gcpckms" {
            # priority    = "1"
            # name        = "gcpckms-primary"
            credentials = "/vault/userconfig/vault-kms-credentials/vault-unseal.key.json"
            project     = "hc-73563a2f5f734d58b01b501d5aa"
            region      = "global"
            key_ring    = "vault-ent-cloudkeys"
            crypto_key  = "vault-crypto-key"
        }
        # enable_multiseal = true
        # seal "gcpckms" {
        #     priority    = "2"
        #     name        = "gcpckms-secondary"
        #     credentials = "/vault/userconfig/vault-kms-credentials/vault-unseal.key.json"
        #     project     = "hc-73563a2f5f734d58b01b501d5aa"
        #     region      = "global"
        #     key_ring    = "vault-ent-subkey"
        #     crypto_key  = "vault-sub-key"
        # }
        storage "raft" {
          path = "/vault/data"
          retry_join {
            leader_api_addr = "http://vault-ha-0.vault-ha-internal:8200"
          }
          retry_join {
            leader_api_addr = "http://vault-ha-1.vault-ha-internal:8200"
          }
          retry_join {
            leader_api_addr = "http://vault-ha-2.vault-ha-internal:8200"
          }
        }
        service_registration "kubernetes" {}

ui:
  enabled: true
